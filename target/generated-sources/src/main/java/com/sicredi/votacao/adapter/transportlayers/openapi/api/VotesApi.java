/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sicredi.votacao.adapter.transportlayers.openapi.api;

import com.sicredi.votacao.adapter.transportlayers.openapi.model.Problem;
import com.sicredi.votacao.adapter.transportlayers.openapi.model.VoteInput;
import com.sicredi.votacao.adapter.transportlayers.openapi.model.VoteResult;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-06-03T13:01:22.826441-03:00[America/Sao_Paulo]")
@Validated
@Api(value = "votes", description = "the votes API")
public interface VotesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /votes : Create a new vote
     * Create a new vote
     *
     * @param voteInput  (optional)
     * @return Vote (status code 201)
     *         or Error (status code 404)
     *         or Error (status code 409)
     *         or Error (status code 500)
     */
    @ApiOperation(value = "Create a new vote", nickname = "createVote", notes = "Create a new vote", response = VoteResult.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Vote", response = VoteResult.class),
        @ApiResponse(code = 404, message = "Error", response = Problem.class),
        @ApiResponse(code = 409, message = "Error", response = Problem.class),
        @ApiResponse(code = 500, message = "Error", response = Problem.class) })
    @PostMapping(
        value = "/votes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<VoteResult> createVote(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) VoteInput voteInput) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"associateId\" : \"associateId\", \"schedulleId\" : \"schedulleId\", \"horary\" : \"2000-01-23T04:56:07.000+00:00\", \"decision\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /votes : Get all votes
     * Get all votes
     *
     * @return Votes (status code 200)
     *         or Error (status code 500)
     */
    @ApiOperation(value = "Get all votes", nickname = "getAllVotes", notes = "Get all votes", response = VoteResult.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Votes", response = VoteResult.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Error", response = Problem.class) })
    @GetMapping(
        value = "/votes",
        produces = { "application/json" }
    )
    default ResponseEntity<List<VoteResult>> getAllVotes() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"associateId\" : \"associateId\", \"schedulleId\" : \"schedulleId\", \"horary\" : \"2000-01-23T04:56:07.000+00:00\", \"decision\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
